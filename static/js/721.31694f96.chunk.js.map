{"version":3,"file":"static/js/721.31694f96.chunk.js","mappings":"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","sources":["components/GlobalStyle.js","components/ContactForm/ContactForm.styled.js","components/ContactForm/ContactForm.js","components/ContactList/ContactList.styled.js","components/ContactList/ContactList.js","components/Filter/Filter.styled.js","components/Filter/Filter.js","pages/Contacts.js"],"sourcesContent":["import { createGlobalStyle } from 'styled-components';\nimport 'modern-normalize';\n\nexport const GlobalStyle = createGlobalStyle`\n\nhtml {\n  box-sizing: border-box;\n  width: 100vw;\n  overflow-x: hidden;\n}\n\n\n*,\n*::before,\n*::after {\n  box-sizing: inherit;\n}\n\n body {\n   \n\n    // margin: 0;\n  font-family: -apple-system, Roboto, BlinkMacSystemFont, 'Segoe UI', \n    Oxygen-Sans, Ubuntu, Cantarell, 'Helvetica Neue', sans-serif;\n  color: #212121;\n  background-color: #F9EBEA ;\n  \n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n\ncode {\n  font-family: source-code-pro, Menlo, Monaco, Consolas, 'Courier New',\n    monospace;}\n\np {\n  margin: 0;\n  padding: 0;\n}\nh1,\nh2,\nh3,\nh4,\nh5,\nh6 {\n  padding: 0;\n  margin: 0;\n  text-align: center;\n}\nul, nav {\n  margin: 0;\n  padding: 0;\n  list-style: none;\n}\na{\n  text-decoration: none;\n  color: inherit;\n}\n\nimg {\n  display: block;\n  max-width: 100%;\n  height: auto;\n}\n\n`;\n","import styled from 'styled-components';\n\nexport const FormContact = styled.form`\n  width: 320px;\n  margin: 0 auto;\n  // text-align: center;\n`;\n\nexport const InputLabel = styled.label`\n  display: flex;\n  flex-direction: column;\n\n  font-size: 18px;\n`;\n\nexport const InputText = styled.input`\n  display: inline-block;\n  width: 100%;\n  font: inherit;\n  font-size: 20px;\n  border: 2px solid #ff9999;\n  border-radius: 3px;\n  margin-bottom: 20px;\n  outline: none;\n  padding-left: 4px;\n  padding-right: 4px;\n  ::placeholder {\n    font: inherit;\n    font-size: 16px;\n  }\n`;\n\nexport const ButtonForm = styled.button`\n  display: inline-block;\n  justify-content:\n  font: inherit;\n  width: 100%;\n  height: 35px;\n  border: 2px solid #e6b0aa;\n  border-radius: 3px;\n  background-color: #e6b0aa;\n  transition: background-color 300ms cubic-bezier(0.4, 0, 0.2, 1);\n  cursor: pointer;\n  outline: none;\n\n  :hover {\n    background-color: #ff9999;\n    color: #ffff;\n    border: 2px solid #ff9999;\n  }\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { toast } from 'react-toastify';\nimport {\n  InputLabel,\n  InputText,\n  ButtonForm,\n  FormContact,\n} from './ContactForm.styled';\nimport { addContact } from 'redux/contacts/operations';\nimport { selectContacts } from 'redux/contacts/contactsSlice';\n\nexport const ContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const { name, number } = event.target.elements;\n    // console.log(name, number);\n    const toLowerCaseName = name.value.toLowerCase().trim();\n\n    const searchName = contacts.find(\n      contact => contact.name.toLowerCase().trim() === toLowerCaseName\n    );\n\n    if (searchName) {\n      return toast(`${toLowerCaseName} is already in contacts`);\n    }\n    // console.log(name.value, number.value);\n    dispatch(addContact({ name: name.value, number: number.value }));\n    event.target.reset();\n  };\n  return (\n    <FormContact onSubmit={handleSubmit}>\n      <InputLabel>Name </InputLabel>\n      <InputText\n        type=\"text\"\n        name=\"name\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        required\n      />\n      <InputLabel>Number </InputLabel>\n      <InputText\n        type=\"tel\"\n        name=\"number\"\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n        required\n      />\n      <ButtonForm type=\"submit\">Add contact</ButtonForm>\n    </FormContact>\n  );\n};\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n  margin-top: 20px;\n  margin-left: 20px;\n  max-width: 450px;\n\n  margin: 0 auto;\n`;\n\nexport const ButtonDelete = styled.button`\n  margin-top: 10px;\n  margin-bottom: 5px;\n  padding: 0 16px 0 16px;\n\n  border: none;\n\n  font: inherit;\n  width: 100px;\n  height: 35px;\n\n  cursor: pointer;\n\n  border: 2px solid #e6b0aa;\n  border-radius: 3px;\n  background-color: #e6b0aa;\n  transition: background-color 300ms cubic-bezier(0.4, 0, 0.2, 1);\n  cursor: pointer;\n  outline: none;\n\n  :hover {\n    background-color: #ff9999;\n    color: #ffff;\n    border: 2px solid #ff9999;\n  }\n`;\n\nexport const ContactItem = styled.li`\n  display: flex;\n  font-size: 20px;\n  align-items: center;\n  // gap: 10px;\n  justify-content: space-between;\n`;\n\nexport const WrapperIcon = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 5px;\n`;\n","// import { PropTypes } from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { IconContext } from 'react-icons';\nimport { MdPermContactCalendar } from 'react-icons/md';\nimport {\n  ButtonDelete,\n  ContactItem,\n  List,\n  WrapperIcon,\n} from './ContactList.styled';\nimport { selectContacts } from '../../redux/contacts/contactsSlice';\nimport { selectFilters } from 'redux/contacts/filtersSlice';\nimport { deleteContact } from 'redux/contacts/operations';\n\nexport const ContactList = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(selectFilters);\n  const contacts = useSelector(selectContacts);\n  // console.log(contacts);\n\n  const getVizibleContact = () => {\n    return filter\n      ? contacts.filter(contact => contact.name.toLowerCase().includes(filter))\n      : contacts;\n  };\n  const vizibleContact = getVizibleContact();\n  // console.log(vizibleContact);\n\n  return (\n    <List>\n      {vizibleContact.map(contact => (\n        <ContactItem key={contact.id}>\n          <WrapperIcon>\n            <IconContext.Provider value={{ color: '#e6b0aa', size: 30 }}>\n              <MdPermContactCalendar />\n            </IconContext.Provider>\n            {contact.name}: {contact.number}\n          </WrapperIcon>\n\n          <ButtonDelete\n            type=\"button\"\n            onClick={() => dispatch(deleteContact(contact.id))}\n          >\n            Delete\n          </ButtonDelete>\n        </ContactItem>\n      ))}\n    </List>\n  );\n};\n\n// ContactList.propTypes = {\n//   contacts: PropTypes.arrayOf(\n//     PropTypes.exact({\n//       id: PropTypes.string.isRequired,\n//       name: PropTypes.string.isRequired,\n//       number: PropTypes.string.isRequired,\n//     })\n//   ),\n//   onDelete: PropTypes.func.isRequired,\n// };\n","import styled from 'styled-components';\n\nexport const WrapperFilter = styled.div`\n  width: 320px;\n  margin: 0 auto;\n`;\n\nexport const LabelFilter = styled.label`\n  margin-bottom: 10px;\n  color: #e57373;\n  // font-weight: bold;\n  font-size: 24px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 20px;\n`;\n\nexport const InputFilter = styled.input`\n  display: inline-block;\n  width: 100%;\n  font: inherit;\n  font-size: 20px;\n  border: 2px solid #ff9999;\n  border-radius: 3px;\n  margin-top: 3px;\n  outline: none;\n  padding-left: 4px;\n  padding-right: 4px;\n  ::placeholder {\n    font: inherit;\n    font-size: 16px;\n  }\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { InputFilter, LabelFilter, WrapperFilter } from './Filter.styled';\nimport { setFilterContact, selectFilters } from 'redux/contacts/filtersSlice';\n\nexport const Filter = () => {\n  const filter = useSelector(selectFilters);\n  const dispatch = useDispatch();\n\n  const changeFilter = event => {\n    const value = event.target.value.toLowerCase().trim();\n    dispatch(setFilterContact(value));\n  };\n  return (\n    <WrapperFilter>\n      <LabelFilter>\n        Find contacts by name\n        <InputFilter type=\"text\" value={filter} onChange={changeFilter} />\n      </LabelFilter>\n    </WrapperFilter>\n  );\n};\n","import { useEffect } from 'react';\nimport { Helmet } from 'react-helmet';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { GlobalStyle } from '../components/GlobalStyle';\nimport { ContactForm } from '../components/ContactForm/ContactForm';\nimport { ContactList } from '../components/ContactList/ContactList';\nimport { Filter } from '../components/Filter/Filter';\nimport { selectIsLoading } from 'redux/contacts/contactsSlice';\nimport styled from 'styled-components';\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const Title = styled.h1`\n    font-weight: 500;\n    font-size: 24px;\n    text-align: center;\n    color: #e57373;\n    padding: 20px 0;\n  `;\n\n  return (\n    <>\n      <Helmet>\n        <title>Phonebook</title>\n      </Helmet>\n      <ContactForm />\n      <Title>Contacts</Title>\n      <Filter />\n      {isLoading && <b>Request in progress...</b>}\n      <ContactList />\n      <GlobalStyle />\n    </>\n  );\n}\n"],"names":["GlobalStyle","createGlobalStyle","FormContact","styled","InputLabel","InputText","ButtonForm","ContactForm","dispatch","useDispatch","contacts","useSelector","selectContacts","onSubmit","event","preventDefault","target","elements","name","number","toLowerCaseName","value","toLowerCase","trim","find","contact","toast","addContact","reset","type","pattern","title","required","List","ButtonDelete","ContactItem","WrapperIcon","ContactList","filter","selectFilters","vizibleContact","includes","map","color","size","onClick","deleteContact","id","WrapperFilter","LabelFilter","InputFilter","Filter","onChange","setFilterContact","Contacts","isLoading","selectIsLoading","useEffect","fetchContacts","Title","Helmet"],"sourceRoot":""}